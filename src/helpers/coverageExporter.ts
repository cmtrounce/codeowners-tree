import { CoverageAnalysis } from "./coverageAnalyzer";

/**
 * Generates a markdown coverage report
 */
export function generateCoverageReport(analysis: CoverageAnalysis): string {
  const coverageColor = analysis.coveragePercentage >= 80 ? "🟢" : 
                       analysis.coveragePercentage >= 60 ? "🟡" : "🔴";
  
  return `# CODEOWNERS Coverage Report

Generated on: ${analysis.scanDate.toLocaleString()}

## 📊 Overall Coverage

${coverageColor} **${analysis.coveragePercentage.toFixed(1)}% Coverage**

- **Total Files**: ${analysis.totalFiles}
- **Covered Files**: ${analysis.coveredFiles}
- **Uncovered Files**: ${analysis.totalFiles - analysis.coveredFiles}

## 📁 Top Uncovered Directories

${analysis.uncoveredDirectories.map(dir => `
### ${dir.path}
- **Coverage**: ${dir.coveragePercentage.toFixed(1)}%
- **Files**: ${dir.coveredFiles}/${dir.totalFiles} covered
- **Uncovered**: ${dir.uncoveredFiles} files
`).join('\n')}

## 📄 Coverage by File Type

${analysis.fileTypeCoverage.map(type => `
### ${type.extension}
- **Coverage**: ${type.coveragePercentage.toFixed(1)}%
- **Files**: ${type.coveredFiles}/${type.totalFiles} covered
- **Uncovered**: ${type.uncoveredFiles} files
`).join('\n')}

## 👥 Team Coverage Distribution

${analysis.teamCoverage.map(team => `
### ${team.team}
- **Files**: ${team.totalFiles}
- **Percentage of Total**: ${team.percentageOfTotal.toFixed(1)}%
`).join('\n')}

---

*Report generated by CODEOWNERS Visualizer extension*
`;
}
